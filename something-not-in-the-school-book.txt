Implement a Compiler - Something Not in the School Book

I have finished the compiler principles leason in my university. But
unfortunately, it was a useless course, I have learned nothing.

I have worked on HTML / web frontend development for a while, and realized that
frontend development must use some runtime-compiling languages. Using data to
carry logic for the web page rendering can significantly improve development
efficiency. Imaging how horrible it would be if the code needs to be fully
recompiled after only changing the class in css. So I started to study the
principles of a compiler and implemented a simple language named "elpmis".

According to my current view points, "elpmis" language has tons of totally
unreasonable implementation details, say, dynamic memory location lookup, very
complex parsing logic. But at least it worked.

Then I continually investigated in the area, encountered lots of detours,
finally got some really meaningful principles. Note them down here.

Chinese version: https://zhuanlan.zhihu.com/c_1191347534474588160
